let referencia = ['1980-01', '1980-02', '1980-03', '1980-04', '1980-05', '1980-06', '1980-07', '1980-08', '1980-09', '1980-10', '1980-11', '1980-12', '1981-01', '1981-02', '1981-03', '1981-04', '1981-05', '1981-06', '1981-07', '1981-08', '1981-09', '1981-10', '1981-11', '1981-12', '1982-01', '1982-02', '1982-03', '1982-04', '1982-05', '1982-06', '1982-07', '1982-08', '1982-09', '1982-10', '1982-11', '1982-12', '1983-01', '1983-02', '1983-03', '1983-04', '1983-05', '1983-06', '1983-07', '1983-08', '1983-09', '1983-10', '1983-11', '1983-12', '1984-01', '1984-02', '1984-03', '1984-04', '1984-05', '1984-06', '1984-07', '1984-08', '1984-09', '1984-10', '1984-11', '1984-12', '1985-01', '1985-02', '1985-03', '1985-04', '1985-05', '1985-06', '1985-07', '1985-08', '1985-09', '1985-10', '1985-11', '1985-12', '1986-01', '1986-02', '1986-03', '1986-04', '1986-05', '1986-06', '1986-07', '1986-08', '1986-09', '1986-10', '1986-11', '1986-12', '1987-01', '1987-02', '1987-03', '1987-04', '1987-05', '1987-06', '1987-07', '1987-08', '1987-09', '1987-10', '1987-11', '1987-12', '1988-01', '1988-02', '1988-03', '1988-04', '1988-05', '1988-06', '1988-07', '1988-08', '1988-09', '1988-10', '1988-11', '1988-12', '1989-01', '1989-02', '1989-03', '1989-04', '1989-05', '1989-06', '1989-07', '1989-08', '1989-09', '1989-10', '1989-11', '1989-12', '1990-01', '1990-02', '1990-03', '1990-04', '1990-05', '1990-06', '1990-07', '1990-08', '1990-09', '1990-10', '1990-11', '1990-12', '1991-01', '1991-02', '1991-03', '1991-04', '1991-05', '1991-06', '1991-07', '1991-08', '1991-09', '1991-10', '1991-11', '1991-12', '1992-01', '1992-02', '1992-03', '1992-04', '1992-05', '1992-06', '1992-07', '1992-08', '1992-09', '1992-10', '1992-11', '1992-12', '1993-01', '1993-02', '1993-03', '1993-04', '1993-05', '1993-06', '1993-07', '1993-08', '1993-09', '1993-10', '1993-11', '1993-12', '1994-01', '1994-02', '1994-03', '1994-04', '1994-05', '1994-06', '1994-07', '1994-08', '1994-09', '1994-10', '1994-11', '1994-12', '1995-01', '1995-02', '1995-03', '1995-04', '1995-05', '1995-06', '1995-07', '1995-08', '1995-09', '1995-10', '1995-11', '1995-12', '1996-01', '1996-02', '1996-03', '1996-04', '1996-05', '1996-06', '1996-07', '1996-08', '1996-09', '1996-10', '1996-11', '1996-12', '1997-01', '1997-02', '1997-03', '1997-04', '1997-05', '1997-06', '1997-07', '1997-08', '1997-09', '1997-10', '1997-11', '1997-12', '1998-01', '1998-02', '1998-03', '1998-04', '1998-05', '1998-06', '1998-07', '1998-08', '1998-09', '1998-10', '1998-11', '1998-12', '1999-01', '1999-02', '1999-03', '1999-04', '1999-05', '1999-06', '1999-07', '1999-08', '1999-09', '1999-10', '1999-11', '1999-12', '2000-01', '2000-02', '2000-03', '2000-04', '2000-05', '2000-06', '2000-07', '2000-08', '2000-09', '2000-10', '2000-11', '2000-12', '2001-01', '2001-02', '2001-03', '2001-04', '2001-05', '2001-06', '2001-07', '2001-08', '2001-09', '2001-10', '2001-11', '2001-12', '2002-01', '2002-02', '2002-03', '2002-04', '2002-05', '2002-06', '2002-07', '2002-08', '2002-09', '2002-10', '2002-11', '2002-12', '2003-01', '2003-02', '2003-03', '2003-04', '2003-05', '2003-06', '2003-07', '2003-08', '2003-09', '2003-10', '2003-11', '2003-12', '2004-01', '2004-02', '2004-03', '2004-04', '2004-05', '2004-06', '2004-07', '2004-08', '2004-09', '2004-10', '2004-11', '2004-12', '2005-01', '2005-02', '2005-03', '2005-04', '2005-05', '2005-06', '2005-07', '2005-08', '2005-09', '2005-10', '2005-11', '2005-12', '2006-01', '2006-02', '2006-03', '2006-04', '2006-05', '2006-06', '2006-07', '2006-08', '2006-09', '2006-10', '2006-11', '2006-12', '2007-01', '2007-02', '2007-03', '2007-04', '2007-05', '2007-06', '2007-07', '2007-08', '2007-09', '2007-10', '2007-11', '2007-12', '2008-01', '2008-02', '2008-03', '2008-04', '2008-05', '2008-06', '2008-07', '2008-08', '2008-09', '2008-10', '2008-11', '2008-12', '2009-01', '2009-02', '2009-03', '2009-04', '2009-05', '2009-06', '2009-07', '2009-08', '2009-09', '2009-10', '2009-11', '2009-12', '2010-01', '2010-02', '2010-03', '2010-04', '2010-05', '2010-06', '2010-07', '2010-08', '2010-09', '2010-10', '2010-11', '2010-12', '2011-01', '2011-02', '2011-03', '2011-04', '2011-05', '2011-06', '2011-07', '2011-08', '2011-09', '2011-10', '2011-11', '2011-12', '2012-01', '2012-02', '2012-03', '2012-04', '2012-05', '2012-06', '2012-07', '2012-08', '2012-09', '2012-10', '2012-11', '2012-12', '2013-01', '2013-02', '2013-03', '2013-04', '2013-05', '2013-06', '2013-07', '2013-08', '2013-09', '2013-10', '2013-11', '2013-12', '2014-01', '2014-02', '2014-03', '2014-04', '2014-05', '2014-06', '2014-07', '2014-08', '2014-09', '2014-10', '2014-11', '2014-12', '2015-01', '2015-02', '2015-03', '2015-04', '2015-05', '2015-06', '2015-07', '2015-08', '2015-09', '2015-10', '2015-11', '2015-12', '2016-01', '2016-02', '2016-03', '2016-04', '2016-05', '2016-06', '2016-07', '2016-08', '2016-09', '2016-10', '2016-11', '2016-12', '2017-01', '2017-02', '2017-03', '2017-04', '2017-05', '2017-06', '2017-07', '2017-08', '2017-09', '2017-10', '2017-11', '2017-12', '2018-01', '2018-02', '2018-03', '2018-04', '2018-05', '2018-06', '2018-07', '2018-08', '2018-09', '2018-10', '2018-11', '2018-12', '2019-01', '2019-02', '2019-03', '2019-04', '2019-05', '2019-06', '2019-07', '2019-08', '2019-09', '2019-10', '2019-11', '2019-12', '2020-01', '2020-02', '2020-03', '2020-04', '2020-05', '2020-06', '2020-07', '2020-08', '2020-09', '2020-10', '2020-11', '2020-12', '2021-01', '2021-02', '2021-03', '2021-04', '2021-05', '2021-06', '2021-07', '2021-08', '2021-09', '2021-10', '2021-11', '2021-12', '2022-01', '2022-02', '2022-03', '2022-04', '2022-05', '2022-06', '2022-07', '2022-08', '2022-09', '2022-10', '2022-11', '2022-12', '2023-01', '2023-02', '2023-03', '2023-04', '2023-05']
let ipca = [6.62, 4.62, 6.04, 5.29, 5.7, 5.31, 5.55, 4.95, 4.23, 9.48, 6.67, 6.61, 6.84, 6.4, 4.97, 6.46, 5.56, 5.52, 6.26, 5.5, 5.26, 5.08, 5.27, 5.93, 6.97, 6.64, 5.71, 5.89, 6.66, 7.1, 6.36, 5.97, 5.08, 4.44, 5.29, 7.81, 8.64, 7.86, 7.34, 6.58, 6.48, 9.88, 10.08, 9.11, 10.3, 8.87, 7.38, 8.68, 9.67, 9.5, 8.94, 9.54, 9.05, 10.08, 9.72, 9.35, 11.75, 10.44, 10.53, 11.98, 11.76, 10.87, 10.16, 8.2, 7.2, 8.49, 10.31, 12.05, 11.12, 10.62, 13.97, 15.07, 14.37, 12.72, 4.77, 0.78, 1.4, 1.27, 1.71, 3.55, 1.72, 1.9, 5.45, 11.65, 13.21, 12.64, 16.37, 19.1, 21.45, 19.71, 9.21, 4.87, 7.78, 11.22, 15.08, 14.15, 18.89, 15.7, 17.6, 19.29, 17.42, 22.0, 21.91, 21.59, 27.45, 25.62, 27.94, 28.7, 37.49, 16.78, 6.82, 8.33, 17.92, 28.65, 27.74, 33.71, 37.56, 39.77, 47.82, 51.5, 67.55, 75.73, 82.39, 15.52, 7.59, 11.75, 12.92, 12.88, 14.41, 14.36, 16.81, 18.44, 20.75, 20.72, 11.92, 4.99, 7.43, 11.19, 12.41, 15.63, 15.63, 20.23, 25.21, 23.71, 25.94, 24.32, 21.4, 19.93, 24.86, 20.21, 21.83, 22.14, 24.63, 25.24, 22.49, 25.24, 30.35, 24.98, 27.26, 27.75, 27.69, 30.07, 30.72, 32.96, 35.69, 33.92, 35.56, 36.84, 41.31, 40.27, 42.75, 42.68, 44.03, 47.43, 6.84, 1.86, 1.53, 2.62, 2.81, 1.71, 1.7, 1.02, 1.55, 2.43, 2.67, 2.26, 2.36, 0.99, 0.99, 1.41, 1.47, 1.56, 1.34, 1.03, 0.35, 1.26, 1.22, 1.19, 1.11, 0.44, 0.15, 0.3, 0.32, 0.47, 1.18, 0.5, 0.51, 0.88, 0.41, 0.54, 0.22, -0.02, 0.06, 0.23, 0.17, 0.43, 0.71, 0.46, 0.34, 0.24, 0.5, 0.02, -0.12, -0.51, -0.22, 0.02, -0.12, 0.33, 0.7, 1.05, 1.1, 0.56, 0.3, 0.19, 1.09, 0.56, 0.31, 1.19, 0.95, 0.6, 0.62, 0.13, 0.22, 0.42, 0.01, 0.23, 1.61, 1.31, 0.23, 0.14, 0.32, 0.59, 0.57, 0.46, 0.38, 0.58, 0.41, 0.52, 1.33, 0.7, 0.28, 0.83, 0.71, 0.65, 0.52, 0.36, 0.6, 0.8, 0.21, 0.42, 1.19, 0.65, 0.72, 1.31, 3.02, 2.1, 2.25, 1.57, 1.23, 0.97, 0.61, -0.15, 0.2, 0.34, 0.78, 0.29, 0.34, 0.52, 0.76, 0.61, 0.47, 0.37, 0.51, 0.71, 0.91, 0.69, 0.33, 0.44, 0.69, 0.86, 0.58, 0.59, 0.61, 0.87, 0.49, -0.02, 0.25, 0.17, 0.35, 0.75, 0.55, 0.36, 0.59, 0.41, 0.43, 0.21, 0.1, -0.21, 0.19, 0.05, 0.21, 0.33, 0.31, 0.48, 0.44, 0.44, 0.37, 0.25, 0.28, 0.28, 0.24, 0.47, 0.18, 0.3, 0.38, 0.74, 0.54, 0.49, 0.48, 0.55, 0.79, 0.74, 0.53, 0.28, 0.26, 0.45, 0.36, 0.28, 0.48, 0.55, 0.2, 0.48, 0.47, 0.36, 0.24, 0.15, 0.24, 0.28, 0.41, 0.37, 0.75, 0.78, 0.52, 0.57, 0.43, 0.0, 0.01, 0.04, 0.45, 0.75, 0.83, 0.63, 0.83, 0.8, 0.79, 0.77, 0.47, 0.15, 0.16, 0.37, 0.53, 0.43, 0.52, 0.5, 0.56, 0.45, 0.21, 0.64, 0.36, 0.08, 0.43, 0.41, 0.57, 0.59, 0.6, 0.79, 0.86, 0.6, 0.47, 0.55, 0.37, 0.26, 0.03, 0.24, 0.35, 0.57, 0.54, 0.92, 0.55, 0.69, 0.92, 0.67, 0.46, 0.4, 0.01, 0.25, 0.57, 0.42, 0.51, 0.78, 1.24, 1.22, 1.32, 0.71, 0.74, 0.79, 0.62, 0.22, 0.54, 0.82, 1.01, 0.96, 1.27, 0.9, 0.43, 0.61, 0.78, 0.35, 0.52, 0.44, 0.08, 0.26, 0.18, 0.3, 0.38, 0.33, 0.25, 0.14, 0.31, -0.23, 0.24, 0.19, 0.16, 0.42, 0.28, 0.44, 0.29, 0.32, 0.09, 0.22, 0.4, 1.26, 0.33, -0.09, 0.48, 0.45, -0.21, 0.15, 0.32, 0.43, 0.75, 0.57, 0.13, 0.01, 0.19, 0.11, -0.04, 0.1, 0.51, 1.15, 0.21, 0.25, 0.07, -0.31, -0.38, 0.26, 0.36, 0.24, 0.64, 0.86, 0.89, 1.35, 0.25, 0.86, 0.93, 0.31, 0.83, 0.53, 0.96, 0.87, 1.16, 1.25, 0.95, 0.73, 0.54, 1.01, 1.62, 1.06, 0.47, 0.67, -0.68, -0.36, -0.29, 0.59, 0.41, 0.62, 0.53, 0.84, 0.71, 0.61, 0.23]


const yArray = ipca

// Converter cada referência para um valor numérico: ano + (mês-1)/12
const xArray = referencia.map(ref => {
    let [year, month] = ref.split('-').map(Number);
    return year + (month - 1) / 12;
  });
  
  // Verificar os valores convertidos
  console.log("Valores numéricos das referências:", xArray);
  
  // Cálculo manual da regressão linear
  let xSum = 0, ySum = 0, xxSum = 0, xySum = 0;
  let count = xArray.length;
  
  for (let i = 0; i < count; i++) {
    xSum += xArray[i];
    ySum += ipca[i];
    xxSum += xArray[i] * xArray[i];
    xySum += xArray[i] * ipca[i];
  }
  
  let slope = (count * xySum - xSum * ySum) / (count * xxSum - xSum * xSum);
  let intercept = (ySum - slope * xSum) / count;
  
  console.log(`Slope: ${slope.toFixed(4)}`);
  console.log(`Intercept: ${intercept.toFixed(4)}`);
  
  // Gerar valores para plotar a linha de regressão
  // Usando o intervalo dos dados originais
  const xMin = Math.min(...xArray);
  const xMax = Math.max(...xArray);
  const xValues = [];
  const yValues = [];
  
  // Incremento aproximado de 1 mês (1/12)
  const step = 1/12;  
  for (let x = xMin; x <= xMax; x += step) {
    xValues.push(x);
    yValues.push(x * slope + intercept);
  }
  


  let data_test = ["2024-06", "2025-02"];

// Converter as datas para o formato numérico: ano + (mês-1)/12
let data_test_numeric = data_test.map(ref => {
  let [year, month] = ref.split('-').map(Number);
  return year + (month - 1) / 12;
});

data_test_numeric.forEach((x, i) => {
  let pred = slope * x + intercept;
  console.log(`Previsão para ${data_test[i]}: ${pred.toFixed(2) * -1}%`);
});
  

  const yPred = xArray.map(x => slope * x + intercept);

// Função para calcular R²
function calculateR2(yTrue, yPred) {
  const n = yTrue.length;
  const yMean = yTrue.reduce((acc, cur) => acc + cur, 0) / n;
  let ssResidual = 0;
  let ssTotal = 0;
  
  for (let i = 0; i < n; i++) {
    ssResidual += Math.pow(yTrue[i] - yPred[i], 2);
    ssTotal += Math.pow(yTrue[i] - yMean, 2);
  }
  
  return 1 - (ssResidual / ssTotal);
}

const r2 = calculateR2(ipca, yPred);
console.log(`Coeficiente de Determinação (R²): ${r2.toFixed(2)}`);